@startuml Tax
' 类 TaxBracket 表示一个税率区间
class TaxBracket {
  - lowerBound: double
  - upperBound: double
  - rate: double
  + TaxBracket(lowerBound: double, upperBound: double, rate: double)
  + getLowerBound(): double
  + setLowerBound(lowerBound: double): void
  + getUpperBound(): double
  + setUpperBound(upperBound: double): void
  + getRate(): double
  + setRate(rate: double): void
  + toString(): String
}

' 类 TaxCalculator 管理税率级别并计算税款
class TaxCalculator {
  - threshold: double
  - brackets: List<TaxBracket>
  + TaxCalculator(threshold: double)
  + addBracket(bracket: TaxBracket): void
  + calculateTax(salary: double): double
  + displayTaxBrackets(): void
  + getBrackets(): List<TaxBracket>
  + setThreshold(threshold: double): void
  + getThreshold(): double
}

' 类 PersonalTaxApp 是主程序，提供命令行交互
class PersonalTaxApp {
  + main(args: String[]): void
  - calculateTaxForSalary(scanner: Scanner, calculator: TaxCalculator): void
  - setNewThreshold(scanner: Scanner, calculator: TaxCalculator): void
  - modifyTaxBracket(scanner: Scanner, calculator: TaxCalculator): void
  - getValidLowerBound(scanner: Scanner, bracket: TaxBracket, lowerLevelUpperBound: double, higherLevelLowerBound: double): double
  - getValidUpperBound(scanner: Scanner, bracket: TaxBracket, newLower: double, level: int, higherLevelLowerBound: double, calculator: TaxCalculator): double
  - updateNextBracketIfNeeded(calculator: TaxCalculator, level: int, bracket: TaxBracket, newUpper: double): void
  - getNewTaxRate(scanner: Scanner, bracket: TaxBracket): double
}

' TaxCalculator 与 TaxBracket 之间的组合关系
TaxCalculator "1" *-- "many" TaxBracket

' PersonalTaxApp 使用 TaxCalculator
PersonalTaxApp ..> TaxCalculator : uses
@enduml
